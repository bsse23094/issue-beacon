<!-- Premium GitHub Issue Explorer -->
<div class="min-h-screen transition-colors duration-300 scrollbar-premium" style="background: rgb(var(--bg-primary))">
  <!-- Premium Header with Glassmorphism -->
  <header class="premium-card sticky top-0 z-50 border-b animate-slide-up" style="border-color: rgba(var(--border-color), 0.2)">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
      <div class="flex items-center justify-between gap-4">
        <!-- Logo & Branding -->
        <div class="flex items-center gap-4">
          <div class="relative float">
            <div class="w-12 h-12 rounded-xl bg-gradient-to-br glow flex items-center justify-center shadow-2xl" style="background: linear-gradient(135deg, rgb(var(--accent-primary)), rgb(var(--accent-secondary)))">
              <svg class="w-7 h-7 text-white" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 .5C5.73.5.86 5.36.86 11.64c0 4.8 3.12 8.87 7.45 10.31.54.1.74-.24.74-.52 0-.26-.01-1-.02-1.93-3.03.66-3.67-1.46-3.67-1.46-.5-1.28-1.22-1.62-1.22-1.62-.99-.67.07-.66.07-.66 1.09.08 1.66 1.12 1.66 1.12.97 1.66 2.55 1.18 3.17.9.1-.7.38-1.18.69-1.45-2.42-.28-4.97-1.21-4.97-5.38 0-1.19.42-2.16 1.11-2.92-.11-.28-.48-1.4.1-2.92 0 0 .9-.29 2.95 1.12a10.1 10.1 0 012.69-.36c.91 0 1.82.12 2.69.36 2.05-1.41 2.95-1.12 2.95-1.12.58 1.52.21 2.64.1 2.92.69.76 1.11 1.73 1.11 2.92 0 4.18-2.56 5.09-4.99 5.36.39.33.73.98.73 1.98 0 1.43-.01 2.58-.01 2.94 0 .29.19.62.75.52C19 20.5 22.14 16.4 22.14 11.64 22.14 5.36 17.27.5 12 .5z"/>
              </svg>
            </div>
          </div>
          
          <div>
            <h1 class="text-2xl font-bold gradient-text text-shadow-md">GitHub Explorer</h1>
            <p class="text-sm" style="color: rgb(var(--text-secondary))">Discover & analyze issues with elegance</p>
          </div>

          <!-- Navigation -->
          <nav class="ml-8 hidden lg:flex items-center gap-6 text-sm font-medium" style="color: rgb(var(--text-secondary))">
            <a href="#" class="hover:text-[rgb(var(--accent-primary))] transition-colors duration-300">Explore</a>
            <a href="#" class="hover:text-[rgb(var(--accent-primary))] transition-colors duration-300">Analytics</a>
            <a href="#" class="hover:text-[rgb(var(--accent-primary))] transition-colors duration-300">Trending</a>
          </nav>
        </div>

        <!-- Right Actions -->
        <div class="flex items-center gap-3">
          <button (click)="toggleTheme()" class="p-3 rounded-xl premium-card hover:scale-110 transition-all duration-300" title="Toggle theme">
            <svg *ngIf="theme.isDark" class="w-5 h-5 text-yellow-400" viewBox="0 0 24 24" fill="currentColor">
              <path d="M21.64 13a9 9 0 11-9.64-9.64 7 7 0 109.64 9.64z"/>
            </svg>
            <svg *ngIf="!theme.isDark" class="w-5 h-5" style="color: rgb(var(--accent-primary))" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"/>
            </svg>
          </button>
          
          <div class="avatar-premium w-10 h-10 rounded-full flex items-center justify-center text-sm font-bold" style="background: linear-gradient(135deg, rgb(var(--accent-primary)), rgb(var(--accent-secondary))); color: white;">
            GH
          </div>
        </div>
      </div>
    </div>
  </header>

  <!-- Hero Section -->
  <section class="relative py-16 overflow-hidden animate-fade-in">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-5xl font-extrabold mb-4 gradient-text text-shadow-lg animate-slide-up">
          Explore GitHub Issues Like Never Before
        </h2>
        <p class="text-xl max-w-2xl mx-auto" style="color: rgb(var(--text-secondary))">
          Search, filter, and analyze issues from any repository with powerful visualizations
        </p>
      </div>

      <!-- Search Card -->
      <div class="max-w-4xl mx-auto premium-card p-8 animate-slide-up" style="animation-delay: 0.1s">
        <div class="space-y-6">
          <!-- Repository Input -->
          <div>
            <label class="block text-sm font-semibold mb-2" style="color: rgb(var(--text-primary))">
              Repository
            </label>
            <div class="relative">
              <span class="absolute inset-y-0 left-4 flex items-center" style="color: rgb(var(--text-secondary))">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
              </span>
              <input 
                [(ngModel)]="currentRepo" 
                (keyup.enter)="loadIssues()" 
                placeholder="e.g., facebook/react, vercel/next.js" 
                class="input-premium w-full pl-12 pr-4 text-lg font-mono"
                style="color: rgb(var(--text-primary))"
              />
            </div>
          </div>

          <!-- Controls Row -->
          <div class="flex flex-wrap items-center gap-4">
            <div class="flex-1 flex items-center gap-3">
              <label class="text-sm font-semibold whitespace-nowrap" style="color: rgb(var(--text-secondary))">Sort by:</label>
              <select [(ngModel)]="sortBy" (change)="onSortChange()" class="input-premium flex-1">
                <option value="created">Newest First</option>
                <option value="updated">Recently Updated</option>
                <option value="comments">Most Discussed</option>
              </select>
            </div>
            
            <button (click)="sortDirection = sortDirection === 'desc' ? 'asc' : 'desc'; onSortChange()" 
                    class="p-3 rounded-xl premium-card hover:scale-110 transition-all duration-300" 
                    title="Toggle sort direction">
              <svg class="w-5 h-5 transition-transform duration-300" [class.rotate-180]="sortDirection === 'asc'" style="color: rgb(var(--text-primary))" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>

            <button (click)="loadIssues()" class="btn-premium px-8 py-3 text-lg font-bold">
              <span class="flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                </svg>
                Search
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Main Content -->
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-16">
    <!-- Error State -->
    <div *ngIf="error" class="premium-card mb-8 p-6 border-2 animate-slide-up" style="border-color: rgb(239 68 68); background: rgba(239, 68, 68, 0.1)">
      <div class="flex items-center gap-4">
        <div class="w-12 h-12 rounded-full flex items-center justify-center" 
             style="background: rgb(239 68 68)">
          <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
          </svg>
        </div>
        <div>
          <h3 class="text-lg font-bold text-red-400">Error Loading Issues</h3>
          <p class="text-red-300">{{ error }}</p>
        </div>
      </div>
    </div>

    <!-- Loading State -->
    <div *ngIf="loading" class="flex flex-col items-center justify-center py-20 animate-fade-in">
      <div class="spinner mb-6" style="width: 64px; height: 64px; border-width: 4px"></div>
      <p class="text-xl font-semibold" style="color: rgb(var(--text-primary))">Loading issues from 
        <span class="gradient-text">{{ currentRepo }}</span>
      </p>
      <p class="text-sm mt-2" style="color: rgb(var(--text-secondary))">This won't take long...</p>
    </div>

    <!-- Content Grid -->
    <div *ngIf="!loading && !error" class="grid grid-cols-1 lg:grid-cols-4 gap-8 animate-fade-in">
      <!-- Sidebar -->
      <aside class="lg:col-span-1 space-y-6">
        <!-- Popular Repositories -->
        <div class="premium-card p-6">
          <h3 class="text-lg font-bold mb-4 flex items-center gap-2" style="color: rgb(var(--text-primary))">
            <svg class="w-5 h-5" style="color: rgb(var(--accent-primary))" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"/>
              <path fill-rule="evenodd" d="M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z" clip-rule="evenodd"/>
            </svg>
            Repositories
          </h3>
          <div class="space-y-2">
            <button 
              *ngFor="let repo of repositories" 
              (click)="selectRepo(repo.name)"
              class="repo-card w-full p-3 text-left transition-all duration-300"
              [class.border-gradient]="currentRepo === repo.name">
              <div class="flex items-center gap-3">
                <div class="w-10 h-10 rounded-lg flex items-center justify-center text-2xl" style="background: rgba(var(--accent-primary), 0.1)">
                  📁
                </div>
                <div class="flex-1 min-w-0">
                  <div class="font-semibold truncate" style="color: rgb(var(--text-primary))">{{ repo.name }}</div>
                  <div class="text-xs flex items-center gap-1" style="color: rgb(var(--text-secondary))">
                    <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                    </svg>
                    {{ shortStars(repo.stars) }}
                  </div>
                </div>
              </div>
            </button>
          </div>
        </div>
      </aside>

      <!-- Main Content -->
      <section class="lg:col-span-3 space-y-8">
        <!-- Statistics Dashboard -->
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
          <div class="stat-card animate-slide-up" style="animation-delay: 0.1s">
            <div class="text-sm font-semibold mb-2" style="color: rgb(var(--text-secondary))">Total Issues</div>
            <div class="text-4xl font-black mb-1" style="color: rgb(var(--text-primary))">{{ stats.total }}</div>
            <div class="h-1 rounded-full mt-3" style="background: linear-gradient(90deg, rgb(var(--accent-primary)), rgb(var(--accent-secondary)))"></div>
          </div>
          
          <div class="stat-card animate-slide-up" style="animation-delay: 0.2s">
            <div class="text-sm font-semibold mb-2" style="color: rgb(var(--text-secondary))">Open</div>
            <div class="text-4xl font-black mb-1 text-green-400">{{ stats.open }}</div>
            <div class="h-1 rounded-full mt-3 bg-green-400"></div>
          </div>
          
          <div class="stat-card animate-slide-up" style="animation-delay: 0.3s">
            <div class="text-sm font-semibold mb-2" style="color: rgb(var(--text-secondary))">Closed</div>
            <div class="text-4xl font-black mb-1 text-purple-400">{{ stats.closed }}</div>
            <div class="h-1 rounded-full mt-3 bg-purple-400"></div>
          </div>
          
          <div class="stat-card animate-slide-up" style="animation-delay: 0.4s">
            <div class="text-sm font-semibold mb-2" style="color: rgb(var(--text-secondary))">Avg Comments</div>
            <div class="text-4xl font-black mb-1" style="color: rgb(var(--accent-primary))">{{ stats.avgComments }}</div>
            <div class="h-1 rounded-full mt-3" style="background: rgb(var(--accent-primary))"></div>
          </div>
        </div>

        <!-- Issues List -->
        <div class="space-y-4">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold" style="color: rgb(var(--text-primary))">
              Issues <span class="text-lg font-normal" style="color: rgb(var(--text-secondary))">({{ issues.length }})</span>
            </h2>
          </div>

          <article *ngFor="let issue of issues; let i = index" 
                   class="issue-card-premium animate-slide-up" 
                   [style.animation-delay]="(i * 0.05) + 's'">
            <div class="p-6">
              <div class="flex items-start gap-4">
                <img [src]="issue.user.avatar_url" 
                     [alt]="issue.user.login" 
                     class="avatar-premium w-12 h-12">
                
                <div class="flex-1 min-w-0">
                  <!-- Status Badge -->
                  <div class="flex items-center gap-3 mb-3">
                    <span class="badge-premium text-white" [style.background]="issue.state === 'open' ? 'rgb(34 197 94)' : 'rgb(168 85 247)'">
                      {{ issue.state === 'open' ? '● Open' : '✓ Closed' }}
                    </span>
                    <span class="text-sm font-mono" style="color: rgb(var(--text-secondary))">#{{ issue.number }}</span>
                    <span class="text-sm" style="color: rgb(var(--text-secondary))">{{ getRelativeTime(issue.created_at) }}</span>
                  </div>

                  <!-- Title -->
                  <h3 class="text-xl font-bold mb-3 hover:text-[rgb(var(--accent-primary))] transition-colors cursor-pointer" 
                      style="color: rgb(var(--text-primary))">
                    {{ issue.title }}
                  </h3>

                  <!-- Meta -->
                  <div class="flex items-center gap-4 text-sm mb-4" style="color: rgb(var(--text-secondary))">
                    <span class="flex items-center gap-2 font-medium">
                      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"/>
                      </svg>
                      {{ issue.user.login }}
                    </span>
                    
                    <span *ngIf="issue.comments > 0" class="flex items-center gap-1">
                      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd"/>
                      </svg>
                      {{ issue.comments }}
                    </span>
                  </div>

                  <!-- Labels -->
                  <div *ngIf="issue.labels && issue.labels.length > 0" class="flex flex-wrap gap-2">
                    <span *ngFor="let label of issue.labels" 
                          class="badge-premium"
                          [style.background-color]="'#' + label.color" 
                          [style.color]="getContrastColor(label.color)">
                      {{ label.name }}
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </article>

          <!-- Empty State -->
          <div *ngIf="issues.length === 0" class="premium-card p-12 text-center">
            <div class="w-24 h-24 mx-auto mb-6 rounded-full flex items-center justify-center" 
                 style="background: rgba(var(--accent-primary), 0.1)">
              <svg class="w-12 h-12" style="color: rgb(var(--accent-primary))" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
              </svg>
            </div>
            <h3 class="text-2xl font-bold mb-2" style="color: rgb(var(--text-primary))">No Issues Found</h3>
            <p style="color: rgb(var(--text-secondary))">Try searching for a different repository</p>
          </div>
        </div>
      </section>
    </div>
  </main>

  <!-- Footer -->
  <footer class="border-t mt-16 py-8" style="border-color: rgba(var(--border-color), 0.2); background: rgba(var(--bg-secondary), 0.5)">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <p style="color: rgb(var(--text-secondary))">
        Built with ❤️ using 
        <span class="gradient-text font-semibold">Angular 19</span> & 
        <span class="gradient-text font-semibold">GitHub API</span>
      </p>
    </div>
  </footer>
</div>
